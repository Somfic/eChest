$columns: 12;

.container {
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100%;
	overflow: hidden;
}

@for $i from 0 to 5 {
	$amount: #{pow($i, 1.25) / 4}rem;

	.container.gap-#{$i} .row {
		margin: 0px -#{$amount};

		& > * {
			padding: $amount;
		}
	}
}

.row {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
}

.col {
	display: flex;
	flex-direction: column;
	flex: 1 0 0%;
}

@for $i from 1 through $columns {
	.col-#{$i} {
		display: flex;
		flex-direction: column;
		width: percentage($i / $columns);
	}
}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
	.col-mb {
		display: flex;
		flex-direction: column;
		flex: 1 0 0%;
	}

	@for $i from 1 to $columns {
		.col-mb-#{$i} {
			display: flex;
			flex-direction: column;
			width: percentage($i / $columns);
		}
	}
}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
	.col-tb {
		display: flex;
		flex-direction: column;
		flex: 1 0 0%;
	}

	@for $i from 1 to $columns {
		.col-tb-#{$i} {
			display: flex;
			flex-direction: column;
			width: percentage($i / $columns);
		}
	}
}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
	.col-lp {
		display: flex;
		flex-direction: column;
		flex: 1 0 0%;
	}

	@for $i from 1 to $columns {
		.col-lp-#{$i} {
			display: flex;
			flex-direction: column;
			width: percentage($i / $columns);
		}
	}
}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
	.col-pc {
		display: flex;
		flex-direction: column;
		flex: 1 0 0%;
	}

	@for $i from 1 to $columns {
		.col-pc-#{$i} {
			display: flex;
			flex-direction: column;
			width: percentage($i / $columns);
		}
	}
}
